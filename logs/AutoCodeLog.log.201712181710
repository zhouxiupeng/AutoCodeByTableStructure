[2017-12-18 17:10:01 DEBUG][main][cache]Couldn't find template in cache for "Object.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:01 DEBUG][main][cache]TemplateLoader.findTemplateSource("Object_en_US.java"): Not found
[2017-12-18 17:10:01 DEBUG][main][cache]TemplateLoader.findTemplateSource("Object_en.java"): Not found
[2017-12-18 17:10:01 DEBUG][main][cache]TemplateLoader.findTemplateSource("Object.java"): Found
[2017-12-18 17:10:01 DEBUG][main][cache]Loading template for "Object.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/Object.java"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectMapperForMysql.xml"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectMapperForMysql_en_US.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectMapperForMysql_en.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectMapperForMysql.xml"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectMapperForMysql.xml"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectMapperForMysql.xml"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectDao.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectDao_en_US.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectDao_en.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectDao.java"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectDao.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectDao.java"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectDaoImpl.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectDaoImpl_en_US.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectDaoImpl_en.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectDaoImpl.java"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectDaoImpl.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectDaoImpl.java"
[2017-12-18 17:10:02 DEBUG][main][beans]Key "p" was not found on instance of com.code.model.MyClass. Introspection information for the class is: {getPkPropertyList=public java.util.List com.code.model.MyClass.getPkPropertyList(), dbNameFU=java.beans.PropertyDescriptor[name=dbNameFU; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbNameFU()], getDbNameAU=public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbNameAU(), dbName=java.beans.PropertyDescriptor[name=dbName; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbName()], moduleName=java.beans.PropertyDescriptor[name=moduleName; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.MyClass.getModuleName()], java.lang.Object@1a1d6a08={public java.lang.String com.code.model.abstractModel.AbstractField.getTimeMonth()=[Ljava.lang.Class;@69b0fd6f, public void com.code.model.abstractModel.AbstractDBField.setDbName(java.lang.String)=[Ljava.lang.Class;@757942a1, public static void com.code.model.MyClass.main(java.lang.String[])=[Ljava.lang.Class;@4a87761d, public void com.code.model.MyClass.setFkPropertyList(java.util.List)=[Ljava.lang.Class;@66d1af89, public void com.code.model.abstractModel.Symbol.setJingHao(java.lang.String)=[Ljava.lang.Class;@8646db9, public java.lang.String com.code.model.abstractModel.Symbol.getMeiYuanFuHao()=[Ljava.lang.Class;@37374a5e, public void com.code.model.abstractModel.AbstractDBField.setDropDownList(java.util.List)=[Ljava.lang.Class;@4671e53b, public java.lang.String com.code.model.abstractModel.Symbol.getJingHao()=[Ljava.lang.Class;@2db7a79b, public java.lang.String com.code.model.abstractModel.AbstractDBField.getIsDropDown()=[Ljava.lang.Class;@6950e31, public java.lang.String com.code.model.abstractModel.AbstractField.getNote()=[Ljava.lang.Class;@b7dd107, public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbName()=[Ljava.lang.Class;@42eca56e, public java.util.List com.code.model.MyClass.getPkPropertyList()=[Ljava.lang.Class;@52f759d7, public java.lang.String com.code.model.abstractModel.AbstractField.getMybatisParaSuffix()=[Ljava.lang.Class;@7cbd213e, public java.lang.String com.code.model.abstractModel.Symbol.getMaoHao()=[Ljava.lang.Class;@192d3247, public boolean com.code.model.abstractModel.AbstractField.equals(java.lang.Object)=[Ljava.lang.Class;@3ecd23d9, public void com.code.model.MyClass.setModuleName(java.lang.String)=[Ljava.lang.Class;@569cfc36, public void com.code.model.abstractModel.Symbol.setFenHao(java.lang.String)=[Ljava.lang.Class;@43bd930a, public java.lang.String com.code.model.abstractModel.Symbol.getFenHao()=[Ljava.lang.Class;@33723e30, public void com.code.model.MyClass.setNoModuleName(java.lang.String)=[Ljava.lang.Class;@64f6106c, public java.util.List com.code.model.MyClass.getFkPropertyList()=[Ljava.lang.Class;@553a3d88, public java.lang.Object com.code.model.abstractModel.AbstractObject.clone()=[Ljava.lang.Class;@7a30d1e6, public void com.code.model.abstractModel.AbstractField.setName(java.lang.String)=[Ljava.lang.Class;@5891e32e, public void com.code.model.MyClass.setPkPropertyList(java.util.List)=[Ljava.lang.Class;@cb0ed20, public java.lang.String com.code.model.abstractModel.AbstractObject.toString()=[Ljava.lang.Class;@8e24743, public java.lang.String com.code.model.abstractModel.AbstractField.getAuthor()=[Ljava.lang.Class;@74a10858, public java.lang.String com.code.model.abstractModel.AbstractField.getNameFU()=[Ljava.lang.Class;@23fe1d71, public java.lang.String com.code.model.abstractModel.AbstractField.getTime()=[Ljava.lang.Class;@28ac3dc3, public void com.code.model.abstractModel.Symbol.setDouHao(java.lang.String)=[Ljava.lang.Class;@32eebfca, public void com.code.model.MyClass.setPropertyList(java.util.List)=[Ljava.lang.Class;@4e718207, public java.lang.String com.code.model.MyClass.getPackageName()=[Ljava.lang.Class;@1d371b2d, public void com.code.model.MyClass.setNoModuleNameFU(java.lang.String)=[Ljava.lang.Class;@543c6f6d, public void com.code.model.abstractModel.Symbol.setAt(java.lang.String)=[Ljava.lang.Class;@13eb8acf, public java.lang.String com.code.model.abstractModel.AbstractField.getNoteMain()=[Ljava.lang.Class;@51c8530f, public int com.code.model.abstractModel.AbstractField.hashCode()=[Ljava.lang.Class;@7403c468, public java.lang.String com.code.model.abstractModel.AbstractField.getMybatisParaPrefix()=[Ljava.lang.Class;@43738a82, public java.util.List com.code.model.MyClass.getNoPKpropertyList()=[Ljava.lang.Class;@c81cdd1, public void com.code.model.MyClass.setPackageName(java.lang.String)=[Ljava.lang.Class;@1fc2b765, public void com.code.model.abstractModel.Symbol.setZuoDaKuoHao(java.lang.String)=[Ljava.lang.Class;@75881071, public void com.code.model.abstractModel.Symbol.setJianHao(java.lang.String)=[Ljava.lang.Class;@2a70a3d8, public java.lang.String com.code.model.abstractModel.Symbol.getXiaHuaXian()=[Ljava.lang.Class;@289d1c02, public void com.code.model.abstractModel.Symbol.setShuXian(java.lang.String)=[Ljava.lang.Class;@22eeefeb, public java.lang.String com.code.model.abstractModel.AbstractField.getNameAU()=[Ljava.lang.Class;@17d0685f, public void com.code.model.abstractModel.Symbol.setYouZhongKuoHao(java.lang.String)=[Ljava.lang.Class;@3891771e, public void com.code.model.abstractModel.Symbol.setMeiYuanFuHao(java.lang.String)=[Ljava.lang.Class;@78ac1102, public java.lang.String com.code.model.abstractModel.AbstractField.getTimeDay()=[Ljava.lang.Class;@2de8284b, public java.lang.String com.code.model.MyClass.getNoModuleName()=[Ljava.lang.Class;@396e2f39, public java.lang.String com.code.model.abstractModel.Symbol.getShuXian()=[Ljava.lang.Class;@a74868d, public java.lang.String com.code.model.abstractModel.AbstractField.getTimeYear()=[Ljava.lang.Class;@12c8a2c0, public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbNameAL()=[Ljava.lang.Class;@7e0e6aa2, public java.lang.String com.code.model.abstractModel.Symbol.getYouDaKuoHao()=[Ljava.lang.Class;@365185bd, public java.lang.String com.code.model.MyClass.getNoModuleNameFU()=[Ljava.lang.Class;@18bf3d14, public java.lang.String com.code.model.abstractModel.Symbol.getJianHao()=[Ljava.lang.Class;@4fb64261, public java.lang.String com.code.model.MyClass.getNoModuleNameAU()=[Ljava.lang.Class;@42607a4f, public java.lang.String com.code.model.abstractModel.Symbol.getZuoDaKuoHao()=[Ljava.lang.Class;@782663d3, public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbNameAU()=[Ljava.lang.Class;@1990a65e, public void com.code.model.MyClass.setNoPKpropertyList(java.util.List)=[Ljava.lang.Class;@64485a47, public void com.code.model.MyClass.setNoModuleNameAU(java.lang.String)=[Ljava.lang.Class;@25bbf683, public java.lang.String com.code.model.abstractModel.AbstractField.getEmail()=[Ljava.lang.Class;@6ec8211c, public void com.code.model.abstractModel.AbstractField.setNote(java.lang.String)=[Ljava.lang.Class;@7276c8cd, public java.lang.String com.code.model.abstractModel.Symbol.getYouZhongKuoHao()=[Ljava.lang.Class;@544a2ea6, public void com.code.model.abstractModel.Symbol.setXiaHuaXian(java.lang.String)=[Ljava.lang.Class;@2e3fc542, public java.lang.String com.code.model.abstractModel.AbstractField.getNameAL()=[Ljava.lang.Class;@150c158, public void com.code.model.MyClass.setNoModuleNameAL(java.lang.String)=[Ljava.lang.Class;@4524411f, public void com.code.model.abstractModel.AbstractDBField.setIsDropDown(java.lang.String)=[Ljava.lang.Class;@401e7803, public java.lang.String com.code.model.abstractModel.AbstractField.getName()=[Ljava.lang.Class;@10dba097, public java.util.List com.code.model.MyClass.getPropertyList()=[Ljava.lang.Class;@1786f9d5, public java.lang.String com.code.model.MyClass.getModuleName()=[Ljava.lang.Class;@704d6e83, public java.util.List com.code.model.abstractModel.AbstractDBField.getDropDownList()=[Ljava.lang.Class;@43a0cee9, public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbNameFU()=[Ljava.lang.Class;@eb21112, public void com.code.model.abstractModel.Symbol.setMaoHao(java.lang.String)=[Ljava.lang.Class;@2eda0940, public java.lang.String com.code.model.MyClass.getNoModuleNameAL()=[Ljava.lang.Class;@3578436e, public void com.code.model.abstractModel.Symbol.setZuoZhongKuoHao(java.lang.String)=[Ljava.lang.Class;@706a04ae, public java.lang.String com.code.model.abstractModel.Symbol.getDouHao()=[Ljava.lang.Class;@6eceb130, public java.lang.String com.code.model.abstractModel.Symbol.getZuoZhongKuoHao()=[Ljava.lang.Class;@10a035a0, public java.lang.String com.code.model.abstractModel.Symbol.getAt()=[Ljava.lang.Class;@67b467e9, public void com.code.model.abstractModel.Symbol.setYouDaKuoHao(java.lang.String)=[Ljava.lang.Class;@47db50c5, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@5c072e3f}, fkPropertyList=java.beans.PropertyDescriptor[name=fkPropertyList; propertyType=interface java.util.List; readMethod=public java.util.List com.code.model.MyClass.getFkPropertyList()], douHao=java.beans.PropertyDescriptor[name=douHao; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getDouHao()], getDbNameAL=public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbNameAL(), meiYuanFuHao=java.beans.PropertyDescriptor[name=meiYuanFuHao; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getMeiYuanFuHao()], timeDay=java.beans.PropertyDescriptor[name=timeDay; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getTimeDay()], getTimeDay=public java.lang.String com.code.model.abstractModel.AbstractField.getTimeDay(), setPropertyList=public void com.code.model.MyClass.setPropertyList(java.util.List), setPkPropertyList=public void com.code.model.MyClass.setPkPropertyList(java.util.List), getTimeYear=public java.lang.String com.code.model.abstractModel.AbstractField.getTimeYear(), setIsDropDown=public void com.code.model.abstractModel.AbstractDBField.setIsDropDown(java.lang.String), at=java.beans.PropertyDescriptor[name=at; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getAt()], getDropDownList=public java.util.List com.code.model.abstractModel.AbstractDBField.getDropDownList(), setNote=public void com.code.model.abstractModel.AbstractField.setNote(java.lang.String), setNoModuleNameFU=public void com.code.model.MyClass.setNoModuleNameFU(java.lang.String), setName=public void com.code.model.abstractModel.AbstractField.setName(java.lang.String), jianHao=java.beans.PropertyDescriptor[name=jianHao; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getJianHao()], setShuXian=public void com.code.model.abstractModel.Symbol.setShuXian(java.lang.String), zuoDaKuoHao=java.beans.PropertyDescriptor[name=zuoDaKuoHao; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getZuoDaKuoHao()], setPackageName=public void com.code.model.MyClass.setPackageName(java.lang.String), youZhongKuoHao=java.beans.PropertyDescriptor[name=youZhongKuoHao; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getYouZhongKuoHao()], getNoModuleName=public java.lang.String com.code.model.MyClass.getNoModuleName(), getYouDaKuoHao=public java.lang.String com.code.model.abstractModel.Symbol.getYouDaKuoHao(), setDbName=public void com.code.model.abstractModel.AbstractDBField.setDbName(java.lang.String), getNoteMain=public java.lang.String com.code.model.abstractModel.AbstractField.getNoteMain(), fenHao=java.beans.PropertyDescriptor[name=fenHao; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getFenHao()], setNoModuleNameAL=public void com.code.model.MyClass.setNoModuleNameAL(java.lang.String), getIsDropDown=public java.lang.String com.code.model.abstractModel.AbstractDBField.getIsDropDown(), getNoModuleNameAU=public java.lang.String com.code.model.MyClass.getNoModuleNameAU(), setXiaHuaXian=public void com.code.model.abstractModel.Symbol.setXiaHuaXian(java.lang.String), getDbName=public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbName(), setNoModuleNameAU=public void com.code.model.MyClass.setNoModuleNameAU(java.lang.String), email=java.beans.PropertyDescriptor[name=email; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getEmail()], getTimeMonth=public java.lang.String com.code.model.abstractModel.AbstractField.getTimeMonth(), getNoModuleNameAL=public java.lang.String com.code.model.MyClass.getNoModuleNameAL(), propertyList=java.beans.PropertyDescriptor[name=propertyList; propertyType=interface java.util.List; readMethod=public java.util.List com.code.model.MyClass.getPropertyList()], mybatisParaPrefix=java.beans.PropertyDescriptor[name=mybatisParaPrefix; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getMybatisParaPrefix()], mybatisParaSuffix=java.beans.PropertyDescriptor[name=mybatisParaSuffix; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getMybatisParaSuffix()], getModuleName=public java.lang.String com.code.model.MyClass.getModuleName(), zuoZhongKuoHao=java.beans.PropertyDescriptor[name=zuoZhongKuoHao; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getZuoZhongKuoHao()], setYouDaKuoHao=public void com.code.model.abstractModel.Symbol.setYouDaKuoHao(java.lang.String), equals=public boolean com.code.model.abstractModel.AbstractField.equals(java.lang.Object), noPKpropertyList=java.beans.PropertyDescriptor[name=noPKpropertyList; propertyType=interface java.util.List; readMethod=public java.util.List com.code.model.MyClass.getNoPKpropertyList()], toString=public java.lang.String com.code.model.abstractModel.AbstractObject.toString(), jingHao=java.beans.PropertyDescriptor[name=jingHao; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getJingHao()], setJingHao=public void com.code.model.abstractModel.Symbol.setJingHao(java.lang.String), getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.code.model.abstractModel.AbstractField.getName(), dropDownList=java.beans.PropertyDescriptor[name=dropDownList; propertyType=interface java.util.List; readMethod=public java.util.List com.code.model.abstractModel.AbstractDBField.getDropDownList()], getJingHao=public java.lang.String com.code.model.abstractModel.Symbol.getJingHao(), getMeiYuanFuHao=public java.lang.String com.code.model.abstractModel.Symbol.getMeiYuanFuHao(), main=public static void com.code.model.MyClass.main(java.lang.String[]), setFkPropertyList=public void com.code.model.MyClass.setFkPropertyList(java.util.List), getMaoHao=public java.lang.String com.code.model.abstractModel.Symbol.getMaoHao(), setNoModuleName=public void com.code.model.MyClass.setNoModuleName(java.lang.String), isDropDown=java.beans.PropertyDescriptor[name=isDropDown; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractDBField.getIsDropDown()], getFkPropertyList=public java.util.List com.code.model.MyClass.getFkPropertyList(), setFenHao=public void com.code.model.abstractModel.Symbol.setFenHao(java.lang.String), timeYear=java.beans.PropertyDescriptor[name=timeYear; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getTimeYear()], getFenHao=public java.lang.String com.code.model.abstractModel.Symbol.getFenHao(), timeMonth=java.beans.PropertyDescriptor[name=timeMonth; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getTimeMonth()], setModuleName=public void com.code.model.MyClass.setModuleName(java.lang.String), dbNameAU=java.beans.PropertyDescriptor[name=dbNameAU; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbNameAU()], pkPropertyList=java.beans.PropertyDescriptor[name=pkPropertyList; propertyType=interface java.util.List; readMethod=public java.util.List com.code.model.MyClass.getPkPropertyList()], getNameAU=public java.lang.String com.code.model.abstractModel.AbstractField.getNameAU(), noModuleNameFU=java.beans.PropertyDescriptor[name=noModuleNameFU; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.MyClass.getNoModuleNameFU()], nameFU=java.beans.PropertyDescriptor[name=nameFU; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getNameFU()], author=java.beans.PropertyDescriptor[name=author; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getAuthor()], java.lang.Object@37d31475=freemarker.ext.beans.SimpleMethod@4d1b0d2a, dbNameAL=java.beans.PropertyDescriptor[name=dbNameAL; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbNameAL()], setDouHao=public void com.code.model.abstractModel.Symbol.setDouHao(java.lang.String), maoHao=java.beans.PropertyDescriptor[name=maoHao; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getMaoHao()], setAt=public void com.code.model.abstractModel.Symbol.setAt(java.lang.String), name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getName()], getDbNameFU=public java.lang.String com.code.model.abstractModel.AbstractDBField.getDbNameFU(), getEmail=public java.lang.String com.code.model.abstractModel.AbstractField.getEmail(), getNameAL=public java.lang.String com.code.model.abstractModel.AbstractField.getNameAL(), getPackageName=public java.lang.String com.code.model.MyClass.getPackageName(), shuXian=java.beans.PropertyDescriptor[name=shuXian; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getShuXian()], noModuleNameAL=java.beans.PropertyDescriptor[name=noModuleNameAL; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.MyClass.getNoModuleNameAL()], nameAU=java.beans.PropertyDescriptor[name=nameAU; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getNameAU()], setYouZhongKuoHao=public void com.code.model.abstractModel.Symbol.setYouZhongKuoHao(java.lang.String), setMeiYuanFuHao=public void com.code.model.abstractModel.Symbol.setMeiYuanFuHao(java.lang.String), note=java.beans.PropertyDescriptor[name=note; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getNote()], setZuoDaKuoHao=public void com.code.model.abstractModel.Symbol.setZuoDaKuoHao(java.lang.String), setJianHao=public void com.code.model.abstractModel.Symbol.setJianHao(java.lang.String), getXiaHuaXian=public java.lang.String com.code.model.abstractModel.Symbol.getXiaHuaXian(), getShuXian=public java.lang.String com.code.model.abstractModel.Symbol.getShuXian(), getAuthor=public java.lang.String com.code.model.abstractModel.AbstractField.getAuthor(), getNoModuleNameFU=public java.lang.String com.code.model.MyClass.getNoModuleNameFU(), getNameFU=public java.lang.String com.code.model.abstractModel.AbstractField.getNameFU(), getTime=public java.lang.String com.code.model.abstractModel.AbstractField.getTime(), nameAL=java.beans.PropertyDescriptor[name=nameAL; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getNameAL()], getNoPKpropertyList=public java.util.List com.code.model.MyClass.getNoPKpropertyList(), getJianHao=public java.lang.String com.code.model.abstractModel.Symbol.getJianHao(), youDaKuoHao=java.beans.PropertyDescriptor[name=youDaKuoHao; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getYouDaKuoHao()], noModuleNameAU=java.beans.PropertyDescriptor[name=noModuleNameAU; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.MyClass.getNoModuleNameAU()], getZuoDaKuoHao=public java.lang.String com.code.model.abstractModel.Symbol.getZuoDaKuoHao(), hashCode=public int com.code.model.abstractModel.AbstractField.hashCode(), noModuleName=java.beans.PropertyDescriptor[name=noModuleName; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.MyClass.getNoModuleName()], setDropDownList=public void com.code.model.abstractModel.AbstractDBField.setDropDownList(java.util.List), getMybatisParaPrefix=public java.lang.String com.code.model.abstractModel.AbstractField.getMybatisParaPrefix(), getYouZhongKuoHao=public java.lang.String com.code.model.abstractModel.Symbol.getYouZhongKuoHao(), packageName=java.beans.PropertyDescriptor[name=packageName; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.MyClass.getPackageName()], class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], setNoPKpropertyList=public void com.code.model.MyClass.setNoPKpropertyList(java.util.List), setMaoHao=public void com.code.model.abstractModel.Symbol.setMaoHao(java.lang.String), getNote=public java.lang.String com.code.model.abstractModel.AbstractField.getNote(), getDouHao=public java.lang.String com.code.model.abstractModel.Symbol.getDouHao(), setZuoZhongKuoHao=public void com.code.model.abstractModel.Symbol.setZuoZhongKuoHao(java.lang.String), getPropertyList=public java.util.List com.code.model.MyClass.getPropertyList(), getMybatisParaSuffix=public java.lang.String com.code.model.abstractModel.AbstractField.getMybatisParaSuffix(), noteMain=java.beans.PropertyDescriptor[name=noteMain; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getNoteMain()], getAt=public java.lang.String com.code.model.abstractModel.Symbol.getAt(), getZuoZhongKuoHao=public java.lang.String com.code.model.abstractModel.Symbol.getZuoZhongKuoHao(), clone=public java.lang.Object com.code.model.abstractModel.AbstractObject.clone(), xiaHuaXian=java.beans.PropertyDescriptor[name=xiaHuaXian; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.Symbol.getXiaHuaXian()], time=java.beans.PropertyDescriptor[name=time; propertyType=class java.lang.String; readMethod=public java.lang.String com.code.model.abstractModel.AbstractField.getTime()]}
[2017-12-18 17:10:02 ERROR][main][runtime]Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> p  [in template "ObjectDaoImpl.java" at line 43, column 102]

----
Tip: If the failing expression is known to be legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${p.javaType}  [in template "ObjectDaoImpl.java" at line 43, column 100]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:131)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:77)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:40)
	at freemarker.core.NonHashException.<init>(NonHashException.java:46)
	at freemarker.core.Dot._eval(Dot.java:45)
	at freemarker.core.Expression.eval(Expression.java:78)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:82)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:41)
	at freemarker.core.Environment.visit(Environment.java:324)
	at freemarker.core.MixedContent.accept(MixedContent.java:54)
	at freemarker.core.Environment.visitByHiddingParent(Environment.java:345)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedBlockInner(IteratorBlock.java:268)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedBlock(IteratorBlock.java:220)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:194)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:572)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:78)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:64)
	at freemarker.core.Environment.visit(Environment.java:324)
	at freemarker.core.MixedContent.accept(MixedContent.java:54)
	at freemarker.core.Environment.visit(Environment.java:324)
	at freemarker.core.Environment.process(Environment.java:302)
	at freemarker.template.Template.process(Template.java:325)
	at com.code.freemarker.FreeMarkerWriter.write(FreeMarkerWriter.java:80)
	at com.code.AutoCodeMain.code(AutoCodeMain.java:102)
	at com.code.AutoCodeMain.code(AutoCodeMain.java:47)
	at com.code.AutoCodeMain.main(AutoCodeMain.java:27)
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectService.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectService_en_US.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectService_en.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectService.java"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectService.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectService.java"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectServiceImpl.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectServiceImpl_en_US.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectServiceImpl_en.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectServiceImpl.java"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectServiceImpl.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectServiceImpl.java"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectController.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectController_en_US.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectController_en.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectController.java"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectController.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectController.java"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "Object.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("Object_en_US.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("Object_en.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("Object.java"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "Object.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/Object.java"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectMapperForMysql.xml"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectMapperForMysql_en_US.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectMapperForMysql_en.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectMapperForMysql.xml"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectMapperForMysql.xml"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectMapperForMysql.xml"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectDao.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectDao_en_US.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectDao_en.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectDao.java"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectDao.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectDao.java"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectService.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectService_en_US.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectService_en.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectService.java"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectService.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectService.java"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectServiceImpl.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectServiceImpl_en_US.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectServiceImpl_en.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectServiceImpl.java"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectServiceImpl.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectServiceImpl.java"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "ObjectController.java"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectController_en_US.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectController_en.java"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("ObjectController.java"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "ObjectController.java"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/ObjectController.java"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "spring-duboo-provider.xml"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-provider_en_US.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-provider_en.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-provider.xml"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "spring-duboo-provider.xml"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/spring-duboo-provider.xml"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "spring-duboo-consumer.xml"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-consumer_en_US.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-consumer_en.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-consumer.xml"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "spring-duboo-consumer.xml"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/spring-duboo-consumer.xml"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "spring-duboo-provider.xml"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-provider_en_US.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-provider_en.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-provider.xml"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "spring-duboo-provider.xml"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/spring-duboo-provider.xml"
[2017-12-18 17:10:02 DEBUG][main][cache]Couldn't find template in cache for "spring-duboo-consumer.xml"("en_US", utf-8, parsed); will try to load it.
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-consumer_en_US.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-consumer_en.xml"): Not found
[2017-12-18 17:10:02 DEBUG][main][cache]TemplateLoader.findTemplateSource("spring-duboo-consumer.xml"): Found
[2017-12-18 17:10:02 DEBUG][main][cache]Loading template for "spring-duboo-consumer.xml"("en_US", utf-8, parsed) from "/media/zxp/pro/java/CodeGenerator/AutoCodeByTableStructure/freeMarkerTemp/iyd/spring-duboo-consumer.xml"
